============================= code for adding to file go/api_news.go ===============================


------------------------------ add to the imports -------------------------------------------------
	"github.com/mediocregopher/radix/v3"   // redis api for pub-sub


------------------------------ add inot GetAllNews function --------------------------------------
	// Get the count from redis (thanks to https://www.alexedwards.net/blog/working-with-redis)
	// redis will be deployed on the same pod hence we can use 'localhost' to address it
	conn, errR := redis.Dial("tcp", "localhost:6379")
	if errR != nil {
		fmt.Fprintln(w, "fesg[ERROR]: Can't connect to redis. " + errR.Error() + "<br>")
	}
	defer conn.Close()

	var theCount int = 0
	exists, errR2 := conn.Cmd("EXISTS", "count").Int()
	if errR2 != nil {
		fmt.Fprintln(w, "fesg[ERROR]: EXISTS in redis failed. " + errR2.Error() + "<br>")
	} else if exists != 0 {
		count, errR3 := conn.Cmd("GET", "count").Int()
		if errR3 != nil {
			fmt.Fprintln(w, "fesg[ERROR]: GET in redis failed. " + errR2.Error() + "<br>")
		} else {
			theCount = count + 1
		}
	}
	respR := conn.Cmd("SET", "count", theCount);
	if (respR.Err != nil) {
		fmt.Fprintln(w, "fesg[ERROR]: SET in redis failed. " + respR.Err.Error() + "<br>")
	}
	
